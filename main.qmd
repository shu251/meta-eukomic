---
title: "Meta-eukomic"
format:
  html:
    code-fold: show
    code-tools: true
    code-copy: true
    toc: true
    toc-location: left
    number-sections: true
    number-depth: 2
editor: visual
---

# Meta-eukomic

*SKH* last updated June 2024

Location for raw files: `/scratch/group/hu-lab/meta-eukomics/raw-data` Individual R1 and R2 files are 2.9 and 2.7 G, respectively.

## Background reading

1.  Cohen NR, Alexander H, Krinos AI, Hu SK, Lampe RH. Marine Microeukaryote Metatranscriptomics: Sample Processing and Bioinformatic Workflow Recommendations for Ecological Applications. Frontiers in Marine Science 2022; 9.

2.  Krinos AI, Cohen NR, Follows MJ, Alexander H. Reverse engineering environmental metatranscriptomes clarifies best practices for eukaryotic assembly. BMC Bioinformatics 2023; 24: 74.

## Working environment

High performace computer (HPC) hosted by my University. This is the TAMU HPRC

# Step-by-step

## 1. Determine assembly groups

## 2. Trim & QC

*Initial Fastqc*

Code for slurm script run on the HPC to run fastqc (`fastqc.slurm`). For this set of samples, it took 10 minutes and used 290 MB. CPU used: 00:12:27.

```         
module load FastQC/0.11.9-Java-11

fastqc /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_001.fastq.gz
fastqc /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R2_001.fastq.gz
```

In order to look at the output `.html` files, they need to be opened locally.

```         
scp $HPRC-ADDRESS:/scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_001_fastqc.html meta-eukomic/output-files/
```

Then we need to trim the individual reads, removing any sequencing-based primers, etc. We can use the program, [Trimmomatic](http://www.usadellab.org/cms/?page=trimmomatic) for this. R1 reads are forward and R2 are reverse. The Trimmomatic software requires input reads and then output trimmed and unpaired reads (the latter of which are discarded). Another input file required is a list of the possible primers and adapters from sequencing, `adapters-primers.fa`.

Slurm script, `trim_fastqc.slurm`. Below, trim parameter include:

* Remove adapters, found in `adapters-primers.fa`

* Remove leading low quality or N bases (below quality 3) (LEADING:3)

* Remove trailing low quality or N bases (below quality 3) (TRAILING:3)

* Scan the read with a 4-base wide sliding window, cutting when the average quality per base drops below 10 (SLIDINGWINDOW:4:10)

* Drop reads shorter than 50 bases long (MINLEN:50)

```         
module load Trimmomatic/0.39-Java-11

java -jar $EBROOTTRIMMOMATIC/trimmomatic-0.39.jar PE /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_001.fastq.gz /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R2_001.fastq.gz  /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_trimmed.fastq.gz /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_unpaired.fastq.gz /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R2_trimmed.fastq.gz /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R2_unpaired.fastq.gz ILLUMINACLIP:adapters-primers.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:10 MINLEN:50

# "$EBROOTTRIMMOMATIC/trimmomatic-0.39.jar" note that this is specific to the HPRC system we are using

echo "Trimmomtatic complete. Repeating fastqc"

module load FastQC/0.11.9-Java-11

fastqc /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_trimmed.fastq.gz
fastqc /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R2_trimmed.fastq.gz
```

## 3. Assembly

The next step is to take all the sequenced reads and bring them together to make longer, more continuous sequences, called *contigs*. Here, we will use two assemblers and combine the results. Each one is built slightly differently.

### MEGAHIT (assembly 1)

We will first use [megahit](https://github.com/voutcn/megahit). To save the assemblies separately, make a new assembly output file in your working `scratch` space. `mkdir /scratch/group/hu-lab/meta-eukomics/assembly`

The megahit command below, outputs contigs in the new `assembly` directory, only keeps reads longer than 100 bps, and uses the megahit preset for lots of diversity in a sample (_meta-large_).

Megahit uses multiple k-mer strategy, and we can set the min and max k. In order to reduce the complexity of the _de Bruijin_ graph, a kmin size of 25 and higher (like 27) is better. 


See slurm script: `megahit-assembly.slurm`
```         
module load GCCcore/11.2.0
module load MEGAHIT/1.2.9

megahit -1 /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_trimmed.fastq.gz -2 /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R2_trimmed.fastq.gz -o /scratch/group/hu-lab/meta-eukomics/assembly/ --min-contig-len 1000 --presets meta-large --num-cpu-threads 32
```

When megahit assembly is complete, use this option to visualize it: https://github.com/voutcn/megahit/wiki/Visualizing-MEGAHIT's-contig-graph


### IDBA-Tran

[IDBA-tran](https://i.cs.hku.hk/~alse/hkubrg/projects/idba_tran/index.html) is another _de novo_ assembler. Uses local assembly to reconstruct missing kmers in low-expressed transcripts.

See script: `idba-assembly.slurm` to run assembly with minimum kmer at 20 and max kmer at 50 with a 5 step increment of kmer.
```
module load GCC/8.2.0-2.31.1 
module load IDBA-UD/1.1.3

# Convert fastq R1 and R2 files into a single 'interleaved` fastq files
bin/fq2fa --merge --filter /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R1_trimmed.fastq.gz /scratch/group/hu-lab/meta-eukomics/raw-data/HS039_S90_L004_R2_trimmed.fastq.gz /scratch/group/hu-lab/meta-eukomics/assembly/merged-PE-for-idba.fa

# Run assembly
idba_tran -r /scratch/group/hu-lab/meta-eukomics/assembly/merged-PE-for-idba.fa -o /scratch/group/hu-lab/meta-eukomics/assembly/idba-out --mink 20 --maxk 50 --step 5 --num_threads 16
```

## 4. Evaluate assemblies

### QUAST

QUAST stands for _QUality ASsessment Tool_ and it is a tool for evaluating assemblies. Not all tools for evaluting assemblies will work, as most are built for metagenomics or require a reference genome. In this case, we do not have a reference genome. 

```
module load GCC/9.3.0
module load OpenMPI/4.0.3
module load QUAST/5.0.2-Python-3.8.2

./quast.py test_data/contigs_1.fasta \
           test_data/contigs_2.fasta \
        -r test_data/reference.fasta.gz \
        -g test_data/genes.txt \
        -1 test_data/reads1.fastq.gz -2 test_data/reads2.fastq.gz \
        -o quast_test_output
```

###




## Metatranscriptome run information

| Software    | Version |
|-------------|---------|
| Fastqc      | 0.11.9  |
| Trimmomatic | 0.39    |
| megahit     | 1.2.9   |
| IDBA-Tran   | 1.1.3   |
|             |         |
|             |         |
|             |         |
|             |         |
|             |         |
|             |         |

# eukrhythmic
